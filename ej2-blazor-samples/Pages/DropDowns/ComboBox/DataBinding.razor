@page "/ComboBox/DataBinding"

@using Syncfusion.EJ2.RazorComponents.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Data Binding";
    SampleBrowser.CurrentControlName = "ComboBox";
    SampleBrowser.CurrentControlCategory = "ComboBox";
    SampleBrowser.CurrentControl = SampleBrowser.Config.ComboBox;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the different data binding supports of the ComboBox. Type a character(s) in the ComboBox element and the remaining characters are automatically filled based on the first matched item.
            Also, provided option to enable/disable this <code>autofill</code> feature in the property panel.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>The ComboBox loads the data either from local data sources or remote data services through the <code>dataSource</code> property. It supports the data type of <code>array</code> or <code>DataManager</code>.</p>
        <p>
            The DataManager, that act as an interface between service endpoint and ComboBox will require the following minimal
            information to interact with the service endpoint properly.
        </p>
        <ul>
            <li><code>DataManager->url</code> - Defines the service endpoint to fetch data.</li>
            <li>
                <code>DataManager->adaptor</code> - Defines the adaptor option. By default, <code>ODataAdaptor</code> is used for
                remote binding.
            </li>
        </ul>
        <p>
            The adaptor is responsible for processing response and request from/to the service endpoint.
            <code>syncfusion/ejs-data</code> package provides some predefined adaptors which are designed to interact with particular
            service endpoints. They are:
        </p>
        <ul>
            <li><code>UrlAdaptor</code> - Use this to interact any remote services.</li>
            <li><code>ODataAdaptor</code> - Use this to interact with OData endpoints.</li>
            <li><code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.</li>
            <li><code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.</li>
            <li><code>WebMethodAdaptor</code> - Use this to interact with web methods.</li>
        </ul>
        <p>
            In this sample, the local data is bound to a collection of sports data and the remote data is bound to a collection of
            customer data as an instance of <code>DataManager</code>. Also, provided option to enable/disable <code>autofill</code> feature in the property panel.
        </p>
        <p>
            More information on the data binding feature configuration can be found in the
            <a href=""https://ej2.syncfusion.com/aspnetcore/documentation/combo-box/data-binding/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section col-lg-12">
    <div id='local-data'>
        <div class='content'>
            <h4>Local Data</h4>
            <EjsComboBox ID="games" PopupHeight="230px" fields="@comboBoxFields" AutoFill="true" placeholder="Select a game" DataSource="@games"></EjsComboBox>
        </div>
    </div>
</div>

<style>
    #local-data {
        width: 350px;
        margin: 0 auto;
        padding-top: 15px;
    }
</style>

@code{
    List<object> games = new List<object>
    {
        new { id= "Game1", text= "American Football" },
        new { id= "Game2", text= "Badminton" },
        new { id= "Game3", text= "Basketball" },
        new { id= "Game4", text= "Cricket" },
        new { id= "Game5", text= "Football" },
        new { id= "Game6", text= "Golf" },
        new { id= "Game7", text= "Hockey" },
        new { id= "Game8", text= "Rugby"},
        new { id= "Game9", text= "Snooker" },
        new { id= "Game10", text= "Tennis"},
        };

    public object comboBoxFields = new
    {
        text = "text",
        value = "id"
    };

}
