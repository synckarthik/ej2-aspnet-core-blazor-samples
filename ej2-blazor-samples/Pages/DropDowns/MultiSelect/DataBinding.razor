@page "/MultiSelect/DataBinding"

@using Syncfusion.EJ2.RazorComponents.DropDowns

@*Hidden:Lines*@
@using ej2_blazor_samples
@{
    SampleBrowser.CurrentSampleName = "Data Binding";
    SampleBrowser.CurrentControlName = "MultiSelect";
    SampleBrowser.CurrentControlCategory = "MultiSelect";
    SampleBrowser.CurrentControl = SampleBrowser.Config.MultiSelect;
    SampleBrowser.ActionDescription = new string[] {
        @"<p>
            This sample demonstrates the different data binding supports of the MultiSelect. Click the MultiSelect element and choose
            one or more items from the suggestion list. At the very first time, when clicked on the remote data MultiSelect,
            the loader icon will be shown until the remote request get the data from server and display it.
        </p>"
    };
    SampleBrowser.Description = new string[] {
        @"<p>
            The MultiSelect loads the data either from local data sources or remote data services through the
            <code>dataSource</code> property. It supports the data type of
            <code>array</code> or
            <code>DataManager</code>.
        </p>
        <p>
            The DataManager, that act as an interface between service endpoint and MultiSelect, will require the following minimal
            information to interact with service endpoint properly.
        </p>
        <ul>
            <li>
                <code>DataManager->url</code> - Defines the service endpoint to fetch data.
            </li>
            <li>
                <code>DataManager->adaptor</code> - Defines the adaptor option. By default,
                <code>ODataAdaptor</code> is used for remote binding.
            </li>
        </ul>
        <p>
            Adaptor is responsible for processing response and request from/to the service endpoint.
            <code>syncfusion/ejs-data</code> package provides some predefined adaptors that are designed to interact with particular service endpoints. They
            are:
        </p>
        <ul>
            <li>
                <code>UrlAdaptor</code> - Use this to interact any remote services.
            </li>
            <li>
                <code>ODataAdaptor</code> - Use this to interact with OData endpoints.
            </li>
            <li>
                <code>ODataV4Adaptor</code> - Use this to interact with OData V4 endpoints.
            </li>
            <li>
                <code>WebApiAdaptor</code> - Use this to interact with Web API created under OData standards.
            </li>
            <li>
                <code>WebMethodAdaptor</code> - Use this to interact with web methods.
            </li>
        </ul>
        <p>
            In this sample, the local data is bound to a collection of sports data and the remote data is bound to a collection of
            customer data as an instance of
            <code>DataManager</code>.
        </p>
        <p>
            More information on the data binding feature configuration can be found in the
            <a href=""https://ej2.syncfusion.com/aspnetcore/documentation/multi-select/data-binding/"" target=""_blank""> documentation section</a>.
        </p>"
    };
}
@*End:Hidden*@

<div class="control-section col-lg-12">
    <div id='local-data'>
        <div class='content'>
            <h4>Local Data</h4>
            <EjsMultiSelect ID="local" PlaceHolder="Select countries" DataSource="@country">
                <MultiSelectFieldSettings text="Name" value="Code"></MultiSelectFieldSettings>
            </EjsMultiSelect>
        </div>
    </div>
</div>

<style>
    #local-data {
        width: 350px;
        margin: 0 auto;
        padding-top: 15px;
    }
</style>

@code{
   public class countries
    {
        public string Name { get; set; }

        public string Code { get; set; }
    }

    List<countries> country = new List<countries>
    {
        new countries() { Name = "Australia", Code = "AU" },
        new countries() { Name = "Bermuda", Code = "BM" },
        new countries() { Name = "Canada", Code = "CA" },
        new countries() { Name = "Cameroon", Code = "CM" },
        new countries() { Name = "Denmark", Code = "DK" },
        new countries() { Name = "France", Code = "FR" },
        new countries() { Name = "Finland", Code = "FI" },
        new countries() { Name = "Germany", Code = "DE" },
        new countries() { Name = "Greenland", Code = "GL" },
        new countries() { Name = "Hong Kong", Code = "HK" },
        new countries() { Name = "India", Code = "IN" },
        new countries() { Name = "Italy", Code = "IT" },
        new countries() { Name = "Japan", Code = "JP" },
        new countries() { Name = "Mexico", Code = "MX" },
        new countries() { Name = "Norway", Code = "NO" },
        new countries() { Name = "Poland", Code = "PL" },
        new countries() { Name = "Switzerland", Code = "CH" },
        new countries() { Name = "United Kingdom", Code = "GB" },
        new countries() { Name = "United States", Code = "US" },
    };
 }
